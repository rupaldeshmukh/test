import React, { useState, useRef, useEffect } from 'react';
import './MultiSelectDropdown.css';

const MultiSelectDropdown = ({ options }) => {
  const [selectedOptions, setSelectedOptions] = useState([]);
  const [dropdownVisible, setDropdownVisible] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const dropdownRef = useRef(null);

  const handleCheckboxChange = (event) => {
    const value = event.target.value;
    setSelectedOptions((prevSelected) =>
      prevSelected.includes(value)
        ? prevSelected.filter((option) => option !== value)
        : [...prevSelected, value]
    );
  };

  const toggleDropdown = () => {
    setDropdownVisible(!dropdownVisible);
  };

  const handleClickOutside = (event) => {
    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
      setDropdownVisible(false);
    }
  };

  const handleInputChange = (event) => {
    setSearchTerm(event.target.value);
    setDropdownVisible(true);
  };

  const filteredOptions = options.filter(option =>
    option.toLowerCase().includes(searchTerm.toLowerCase())
  );

  useEffect(() => {
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  return (
    <div className="multi-select-dropdown" ref={dropdownRef}>
      <div className="dropdown-input" onClick={toggleDropdown}>
        <input
          type="text"
          placeholder="Search and select"
          value={searchTerm}
          onChange={handleInputChange}
        />
      </div>
      {dropdownVisible && (
        <div className="dropdown-content">
          {filteredOptions.length > 0 ? (
            filteredOptions.map((option) => (
              <label key={option} className="dropdown-option">
                <input
                  type="checkbox"
                  value={option}
                  checked={selectedOptions.includes(option)}
                  onChange={handleCheckboxChange}
                />
                {option}
              </label>
            ))
          ) : (
            <div className="no-options">No matching options</div>
          )}
        </div>
      )}
      <div className="selected-options">
        {selectedOptions.map((option) => (
          <span key={option} className="selected-option">
            {option} <button onClick={() => handleCheckboxChange({ target: { value: option } })}>Ã—</button>
          </span>
        ))}
      </div>
    </div>
  );
};

export default MultiSelectDropdown;
_______________________
CSS
__________________________
.multi-select-dropdown {
    width: 300px;
    position: relative;
    font-family: Arial, sans-serif;
  }
  
  .dropdown-input {
    display: flex;
    align-items: center;
    border: 1px solid #ccc;
    border-radius: 4px;
    padding: 8px;
    background-color: #fff;
  }
  
  .dropdown-input input {
    border: none;
    outline: none;
    width: 100%;
  }
  
  .dropdown-content {
    position: absolute;
    width: 100%;
    max-height: 150px;
    overflow-y: auto;
    border: 1px solid #ccc;
    border-radius: 4px;
    background-color: #fff;
    z-index: 1000;
    margin-top: 5px;
  }
  
  .dropdown-option {
    display: flex;
    align-items: center;
    padding: 5px 10px;
    cursor: pointer;
  }
  
  .dropdown-option:hover {
    background-color: #f0f0f0;
  }
  
  .dropdown-option input {
    margin-right: 8px;
  }
  
  .no-options {
    padding: 10px;
    text-align: center;
    color: #999;
  }
  
  .selected-options {
    margin-top: 10px;
    display: flex;
    flex-wrap: wrap;
  }
  
  .selected-option {
    background-color: #f0f0f0;
    padding: 5px 10px;
    margin: 5px;
    border-radius: 4px;
    display: inline-flex;
    align-items: center;
  }
  
  .selected-option button {
    background: none;
    border: none;
    margin-left: 5px;
    cursor: pointer;
    color: #888;
  }
  ________________________________
App,js
import MultiSelectDropdown from './Component/MultiSelectDropdown';
import "./App.css"

const options = ['Option 1', 'Option 2', 'Option 3', 'Option 4'];

const App = () => {
  return (
    <div>
      <h1>Multi-Select Dropdown Example</h1>
      <MultiSelectDropdown options={options} />
    </div>
  );
};
export default App;


