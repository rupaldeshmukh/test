import React, { useState } from 'react';

// ChildComponent
const ChildComponent = ({ handleRadioChange }) => {
  const [formData, setFormData] = useState({
    qDataPolicyComplyReq: '',
    qImpactTMobBusNservice: '',
    qProdinLOBorFunc: '',
    qExecDecision: '',
    qCustFacing: '',
    qLegalPeril: '',
  });

  const handleOptionChange = (name, value) => {
    setFormData({ ...formData, [name]: value });
    handleRadioChange(name, value);
  };

  return (
    <div>
      <h3>Child Component</h3>
      <div>
        <h4>Is this product used to support any T-Mobile data policy compliance requirements (e.g., SOX key report)?</h4>
        <label>
          <input
            type="radio"
            value="yes"
            checked={formData.qDataPolicyComplyReq === 'yes'}
            onChange={() => handleOptionChange('qDataPolicyComplyReq', 'yes')}
          />
          Yes
        </label>
        <label>
          <input
            type="radio"
            value="no"
            checked={formData.qDataPolicyComplyReq === 'no'}
            onChange={() => handleOptionChange('qDataPolicyComplyReq', 'no')}
          />
          No
        </label>
      </div>
      <div>
        <h4>If this product was down, would it cause major issues to T-Mobile's ability to conduct business & provide services?</h4>
        <label>
          <input
            type="radio"
            value="yes"
            checked={formData.qImpactTMobBusNservice === 'yes'}
            onChange={() => handleOptionChange('qImpactTMobBusNservice', 'yes')}
          />
          Yes
        </label>
        <label>
          <input
            type="radio"
            value="no"
            checked={formData.qImpactTMobBusNservice === 'no'}
            onChange={() => handleOptionChange('qImpactTMobBusNservice', 'no')}
          />
          No
        </label>
      </div>
      {/* Repeat similar structure for other questions */}
    </div>
  );
};

// ParentComponent
const ParentComponent = () => {
  const [formData, setFormData] = useState({
    qDataPolicyComplyReq: '',
    qImpactTMobBusNservice: '',
    qProdinLOBorFunc: '',
    qExecDecision: '',
    qCustFacing: '',
    qLegalPeril: '',
  });

  const handleRadioChange = (name, value) => {
    setFormData({ ...formData, [name]: value });
  };

  return (
    <div>
      <h2>Parent Component</h2>
      <ChildComponent handleRadioChange={handleRadioChange} />
      <div>
        <h3>Form Data in Parent Component:</h3>
        <p>Is this product used to support any T-Mobile data policy compliance requirements: {formData.qDataPolicyComplyReq}</p>
        <p>If this product was down, would it cause major issues to T-Mobile's ability to conduct business & provide services: {formData.qImpactTMobBusNservice}</p>
        {/* Repeat similar structure for other questions */}
      </div>
    </div>
  );
};

export default ParentComponent;
